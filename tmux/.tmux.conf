# Look good
set -g default-terminal "screen-256color"
# set-option -sa terminal-overrides ',xterm*:sitm=\E[3m'
set-option -sa terminal-overrides ',xterm-256color:RGB'

# Rebind prefix to Ctrl+A
unbind C-b
set -g prefix C-Space

# Source config
unbind r # unbind default binding to force redraw of attached client
bind   r source-file ~/.tmux.conf \; display "Finished sourcing ~/.tmux.conf ."

# Get rid of delay reading command characters while tmux waits for escape sequence
set -sg escape-time 0

# Start pane indices at 1.
set -g pane-base-index 1

# Start window indices at 1.
set -g base-index 1

# Disable bell.
set -g bell-action other
set -g visual-bell on
setw -g monitor-activity on
set -g visual-activity off

# Automatically renumber the windows.
# http://unix.stackexchange.com/questions/21742/renumbering-windows-in-tmux
set -g renumber-windows on

# Automatically set window title
setw -g automatic-rename on
set -g set-titles on

# Rebind window switching
bind -n C-PPage previous-window
bind -n C-NPage next-window

# Switch to last window.
bind C-Space last-window

# Enable vi mode.
set -g status-keys vi
setw -g mode-keys vi

# Disable aggresive resize
setw -g aggressive-resize off

# Set history limit
set -g history-limit 5000

# Yank compatibility
# set -g @shell_mode 'vi'

# setup 'v' to begin selection as in vim
bind -Tcopy-mode-vi 'v' send -X begin-selection
bind -Tcopy-mode-vi 'y' send -X copy-selection

# Enable ctrl+arrow key jump
setw -g xterm-keys on

# Clear history of the current pane.
# bind   C clear-history \; display "Cleared history of the current pane."

# Clear screen (<prefix><C-l>).
# bind C-l send-keys 'C-l'

# Turn off clipboard to prevent yank base64 trash.
set -s set-clipboard off

# Resize size
set -g @pane_resize '1'

# Open/close popup
bind f if-shell -F '#{==:#{session_name},floating}' {
    detach-client
} {
    set -gF '@last_session_name' '#S'
    popup -d '#{pane_current_path}' -E 'tmux new -A -s floating'
}

# Attach popup to current session
bind ! if-shell -F '#{!=:#{session_name},floating}' {
    break-pane
} {
    run-shell 'bash -c "tmux break-pane -s floating -t \"$(tmux show -gvq '@last_session_name'):\""'
}

# Attach popup to current session (on background)
bind @ if-shell -F '#{!=:#{session_name},floating}' {
    break-pane -d
} {
    run-shell 'bash -c "tmux break-pane -d -s floating -t \"$(tmux show -gvq '@last_session_name'):\""'
}

# Enable mouse mode
set -g -q mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Bind copy mode
bind C copy-mode
bind V paste-buffer

# Unbind Ctrl+Arrow
unbind C-Left
unbind C-Right
unbind C-Up
unbind C-Down

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Setup plugin manager
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-open'
# set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-battery'
# set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'tmux-plugins/tmux-logging'
# set -g @plugin 'tmux-plugins/tmux-urlview'
# set -g @plugin 'tmux-plugins/tmux-sessionist'
# set -g @plugin 'tmux-plugins/tmux-online-status'
# set -g @plugin 'erikw/tmux-powerline'
# set -g @plugin 'thewtex/tmux-mem-cpu-load'
# set -g @plugin 'seebi/tmux-colors-solarized'
set -g @plugin 'laktak/extrakto'

# Autorestore session
set -g @continuum-restore 'on'

# Automatic tmux start
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm,fullscreen'

# Restore vim
# set -g @resurrect-strategy-vim 'session'

# Restore pane contents
# set -g @resurrect-capture-pane-contents 'on'

# Restore shell history
# set -g @resurrect-save-shell-history 'on'

# Configure status bar.
set -g status on
set -g status-bg '#282c34'
set -g status-fg colour2
set -g status-justify "centre"
set -g status-interval 5
set -g status-left-length 30
set -g status-left '#{?client_prefix,#[fg=colour3],#[fg=colour2]}#{?pane_in_mode,#[reverse]#[fg=colour3],} (#S) '
set -g status-right ' #[fg=colour2]%H:%M %d/%m/%y'
# Messaging
# set -g message-fg colour3
# set -g message-bg '#282c34'
# set -g message-command-fg colour2
# set -g message-command-bg '#282c34'
# Window status
setw -g window-status-format " #I #(basename '#{pane_current_path}') #{?window_zoomed_flag,(Z) ,}"
setw -g window-status-style fg=colour8,bg='#282c34',none
setw -g window-status-current-format " #I #(basename '#{pane_current_path}') #{?window_zoomed_flag,(Z) ,}"
setw -g window-status-current-style fg=colour2,bg='#282c34',none
setw -g window-status-bell-style fg=colour1,bg='#282c34',none
setw -g window-status-activity-style fg=colour3,bg='#282c34',none

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
